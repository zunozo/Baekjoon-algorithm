Baekjoon1504
n=int(input())
G=[list(input()) for _ in range(n)]
for a in range(len(G)):
    G[a]=list(map(int,G[a]))

vector=[[0,-1],[0,1],[1,0],[-1,0]]#좌 우 상 하
visited=[[0] * n for _ in range(n)]
count=1
d_c=[]
def bfs(i,j,count):
    dcount=0
    global visited
    queue=[]
    queue.append((i,j))
    while queue:
        i,j=queue.pop(0)
        if visited[i][j]:
            continue
        dcount+=1
        visited[i][j]=count
        for dx,dy in vector:
            if 0<=i+dx<n and 0<=j+dy<n and visited[i+dx][j+dy]==0 and G[i+dx][j+dy]: #그래프 범위내에있고 방문하지 않았다면
                queue.append((i+dx,j+dy))
    d_c.append(dcount)
for i in range(n):
    for j in range(n):
        if visited[i][j]==0 and G[i][j]: #방문하지 않았고, 집이있다면
            bfs(i,j,count)
            count+=1
print(count-1)
d_c.sort()
for j in d_c:
    print(j)
